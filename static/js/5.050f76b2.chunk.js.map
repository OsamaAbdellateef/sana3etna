{"version":3,"sources":["components/craft-preview/craft-preview.component.jsx"],"names":["CraftCard","lazy","firestore","firebase","CraftPreview","handle","a","set_state","this","props","collection","get","then","console","log","usersRef","users","docs","map","doc","data","onSnapshot","querySnapshot","forEach","post","mC","filter","user","signedAs","craft","match","params","categoryId","myCrafts","className","style","margin","worker","fallback","height","width","imageCraftURL","displayName","address","phoneNumber","imagePersonalURL","React","Component","connect","workers","plumber","electrician","dispatch","stateName","value"],"mappings":"4RAUMA,G,OAAYC,gBAAK,kBAAM,kCAEvBC,EAAYC,IAASD,YAGrBE,E,2MAwDFC,O,sBAAS,sBAAAC,EAAA,0F,uNAnDEC,EAAaC,KAAKC,MAAlBF,U,SASgBL,EAAUQ,WAAW,SAASC,MAAMC,KAAKC,QAAQC,IAAI,iB,OAAtEC,E,OACFC,EAAQD,EAASE,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,UAIzClB,EAAUQ,WAAW,SAASW,YAAW,SAASC,GAC9CA,EAAcC,SAAQ,SAAAJ,GAClBN,QAAQC,IAAIK,EAAIC,OAAOI,YAc3BC,EAAKT,EAAMU,QAAO,SAAAC,GAAI,MAAqB,UAAjBA,EAAKC,UAAwBD,EAAKE,OAAS,EAAKpB,MAAMqB,MAAMC,OAAOC,cAKjGzB,EAAU,WAAakB,G,qIAmEPjB,KAAKC,MAAMwB,SAC3B,OAEI,yBAAKC,UAAU,2BACX,wBAAIA,UAAU,GAAGC,MAAO,CAAEC,OAAQ,kBAA0D,8CAAtC5B,KAAKC,MAAMqB,MAAMC,OAAOC,WAA0B,sEAAiB,MAC7H,yBAAKE,UAAU,OACV1B,KAAKC,MAAMwB,SAASf,KAAI,SAAAmB,GAAM,OAC3B,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,CAAUC,OAAQ,IAAKC,MAAO,OAC7C,kBAACxC,EAAD,CACDyC,cAAeJ,EAAOI,cAAeC,YAAaL,EAAOK,YAAaC,QAASN,EAAOM,QACtFC,YAAaP,EAAOO,YAAaC,iBAAkBR,EAAOQ,iBAAkBhB,MAASQ,EAAOR,YAInGhB,QAAQC,IAAI,gBAAkBN,KAAKC,MAAMqB,MAAMC,OAAOC,kB,GAzH5Cc,IAAMC,WA6IlBC,uBAXS,SAAC,GAAD,IAAGrB,EAAH,EAAGA,KAAH,MAAe,CACnCsB,QAAStB,EAAKsB,QACdC,QAASvB,EAAKuB,QACdC,YAAaxB,EAAKwB,YAClBlB,SAASN,EAAKM,aAGS,SAACmB,GAAD,MAAe,CACtC7C,UAAW,SAAC8C,EAAWC,GAAZ,OAAsBF,EAAS7C,YAAU8C,EAAWC,QAGpDN,CAA6C5C","file":"static/js/5.050f76b2.chunk.js","sourcesContent":["import React, {Suspense , lazy} from 'react';\r\nimport './craft-preview.style.scss';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { set_state } from '../../redux/user/user.actions';\r\nimport { connect } from 'react-redux';\r\n//import CraftCard from '../craft-card/craft-card.component';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport spinnerComp from '../spinner/spinner.component';\r\nimport SpinnerComp from '../spinner/spinner.component';\r\nconst CraftCard = lazy(() => import( '../craft-card/craft-card.component'));\r\n \r\nconst firestore = firebase.firestore();\r\n\r\n\r\nclass CraftPreview extends React.Component {\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        const {set_state} = this.props;\r\n        // const events = await firebase.firestore().collection('events')\r\n        // events.get().then((querySnapshot) => {\r\n        //     const tempDoc = []\r\n        //     querySnapshot.forEach((doc) => {\r\n        //        tempDoc.push({ id: doc.id, ...doc.data() })\r\n        //     })\r\n        //     console.log(tempDoc)\r\n        //  })\r\n         var  usersRef = await firestore.collection(\"users\").get().then(console.log(\"hello there \"));\r\n        var users = usersRef.docs.map(doc => doc.data());\r\n        // var workers = users.filter(user => user.signedAs == \"worker\");\r\n        \r\n        //Real time database \r\n        firestore.collection(\"users\").onSnapshot(function(querySnapshot) {\r\n            querySnapshot.forEach(doc => {\r\n                console.log(doc.data().post);\r\n                \r\n            })\r\n            \r\n            \r\n        });\r\n\r\n        // var electrician = users.filter(user => user.signedAs == \"worker\" && user.craft == \"كهربائي\");\r\n\r\n        // var plumber = users.filter(user => user.signedAs == \"worker\" && user.craft == \"سباك\");\r\n\r\n\r\n        // var mahar = users.filter(user => user.signedAs == \"worker\" && user.craft == \"محار\");\r\n        \r\n        var mC = users.filter(user => user.signedAs == \"worker\" && user.craft == this.props.match.params.categoryId);\r\n\r\n\r\n    \r\n        \r\n        set_state(\"myCrafts\" , mC);\r\n        \r\n        // set_state(\"workers\", workers);\r\n        // //set_state(\"electrician\" , electrician);\r\n        \r\n        // set_state(\"plumber\" , plumber);\r\n        // set_state(\"mahar\" , mahar);\r\n\r\n        // console.log(electrician);\r\n        // console.log(mahar);\r\n        // console.log(plumber);\r\n        // console.log(\"MCCCCCCCCCC : \"  , mC);  \r\n        \r\n    }\r\n\r\n\r\n    handle = async () => {\r\n        // const {set_state} = this.props;\r\n        // // const events = await firebase.firestore().collection('events')\r\n        // // events.get().then((querySnapshot) => {\r\n        // //     const tempDoc = []\r\n        // //     querySnapshot.forEach((doc) => {\r\n        // //        tempDoc.push({ id: doc.id, ...doc.data() })\r\n        // //     })\r\n        // //     console.log(tempDoc)\r\n        // //  })\r\n        // var usersRef = await firestore.collection(\"users\").get().then(console.log(\"hello there \"));\r\n        // var users = usersRef.docs.map(doc => doc.data());\r\n        // // var workers = users.filter(user => user.signedAs == \"worker\");\r\n        \r\n        // //Real time database \r\n        // firestore.collection(\"users\").onSnapshot(function(querySnapshot) {\r\n        //     querySnapshot.forEach(doc => {\r\n        //         console.log(doc.data().displayName);\r\n                \r\n        //     })\r\n            \r\n            \r\n        // });\r\n\r\n        // // var electrician = users.filter(user => user.signedAs == \"worker\" && user.craft == \"كهربائي\");\r\n\r\n        // // var plumber = users.filter(user => user.signedAs == \"worker\" && user.craft == \"سباك\");\r\n\r\n\r\n        // // var mahar = users.filter(user => user.signedAs == \"worker\" && user.craft == \"محار\");\r\n        \r\n        // var mC = users.filter(user => user.signedAs == \"worker\" && user.craft == this.props.match.params.categoryId);\r\n\r\n\r\n    \r\n        \r\n        // set_state(\"myCrafts\" , mC);\r\n        \r\n        // // set_state(\"workers\", workers);\r\n        // // //set_state(\"electrician\" , electrician);\r\n        \r\n        // // set_state(\"plumber\" , plumber);\r\n        // // set_state(\"mahar\" , mahar);\r\n\r\n        // // console.log(electrician);\r\n        // // console.log(mahar);\r\n        // // console.log(plumber);\r\n        // // console.log(\"MCCCCCCCCCC : \"  , mC);  \r\n        \r\n    }\r\n    render() {\r\n        const crafts  = this.props.myCrafts;\r\n        return (\r\n\r\n            <div className=\"craft-preview container\">\r\n                <h3 className=\"\" style={{ margin: \"75px 0px 22px\"}} >{this.props.match.params.categoryId == \"كهربائي\" ? 'قسم الكهرباء' : null}</h3>\r\n            <div className=\"row\" >\r\n                {this.props.myCrafts.map(worker => (\r\n                    <Suspense fallback={<Skeleton height={100} width={100} />}>\r\n                         <CraftCard  \r\n                        imageCraftURL={worker.imageCraftURL} displayName={worker.displayName} address={worker.address} \r\n                        phoneNumber={worker.phoneNumber} imagePersonalURL={worker.imagePersonalURL} craft = {worker.craft} />\r\n                    </Suspense>\r\n                ))                \r\n                }\r\n                {console.log('category id: ' , this.props.match.params.categoryId)}\r\n                         \r\n            </div >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n    workers: user.workers,\r\n    plumber: user.plumber,\r\n    electrician: user.electrician,\r\n    myCrafts:user.myCrafts\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    set_state: (stateName, value) => dispatch(set_state(stateName, value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CraftPreview);"],"sourceRoot":""}